import { EventEmitter, ElementRef, OnInit, OnDestroy, NgZone } from "@angular/core";
import { ControlValueAccessor } from "@angular/forms";
import "brace";
import "brace/theme/monokai";
import * as ɵngcc0 from '@angular/core';
export declare class AceEditorComponent implements ControlValueAccessor, OnInit, OnDestroy {
    private zone;
    textChanged: EventEmitter<{}>;
    textChange: EventEmitter<{}>;
    style: any;
    _options: any;
    _readOnly: boolean;
    _theme: string;
    _mode: any;
    _autoUpdateContent: boolean;
    _editor: any;
    _durationBeforeCallback: number;
    _text: string;
    oldText: any;
    timeoutSaving: any;
    constructor(elementRef: ElementRef, zone: NgZone);
    ngOnInit(): void;
    ngOnDestroy(): void;
    init(): void;
    initEvents(): void;
    updateText(): void;
    options: any;
    setOptions(options: any): void;
    readOnly: any;
    setReadOnly(readOnly: any): void;
    theme: any;
    setTheme(theme: any): void;
    mode: any;
    setMode(mode: any): void;
    value: string;
    writeValue(value: any): void;
    private _onChange;
    registerOnChange(fn: any): void;
    private _onTouched;
    registerOnTouched(fn: any): void;
    text: string;
    setText(text: any): void;
    autoUpdateContent: any;
    setAutoUpdateContent(status: any): void;
    durationBeforeCallback: number;
    setDurationBeforeCallback(num: number): void;
    getEditor(): any;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<AceEditorComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<AceEditorComponent, "ace-editor", never, {
    "style": "style";
    "options": "options";
    "readOnly": "readOnly";
    "theme": "theme";
    "mode": "mode";
    "value": "value";
    "text": "text";
    "autoUpdateContent": "autoUpdateContent";
    "durationBeforeCallback": "durationBeforeCallback";
}, {
    "textChanged": "textChanged";
    "textChange": "textChange";
}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbImNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7Ozs7Ozs7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRXZlbnRFbWl0dGVyLCBFbGVtZW50UmVmLCBPbkluaXQsIE9uRGVzdHJveSwgTmdab25lIH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcbmltcG9ydCB7IENvbnRyb2xWYWx1ZUFjY2Vzc29yIH0gZnJvbSBcIkBhbmd1bGFyL2Zvcm1zXCI7XG5pbXBvcnQgXCJicmFjZVwiO1xuaW1wb3J0IFwiYnJhY2UvdGhlbWUvbW9ub2thaVwiO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgQWNlRWRpdG9yQ29tcG9uZW50IGltcGxlbWVudHMgQ29udHJvbFZhbHVlQWNjZXNzb3IsIE9uSW5pdCwgT25EZXN0cm95IHtcbiAgICBwcml2YXRlIHpvbmU7XG4gICAgdGV4dENoYW5nZWQ6IEV2ZW50RW1pdHRlcjx7fT47XG4gICAgdGV4dENoYW5nZTogRXZlbnRFbWl0dGVyPHt9PjtcbiAgICBzdHlsZTogYW55O1xuICAgIF9vcHRpb25zOiBhbnk7XG4gICAgX3JlYWRPbmx5OiBib29sZWFuO1xuICAgIF90aGVtZTogc3RyaW5nO1xuICAgIF9tb2RlOiBhbnk7XG4gICAgX2F1dG9VcGRhdGVDb250ZW50OiBib29sZWFuO1xuICAgIF9lZGl0b3I6IGFueTtcbiAgICBfZHVyYXRpb25CZWZvcmVDYWxsYmFjazogbnVtYmVyO1xuICAgIF90ZXh0OiBzdHJpbmc7XG4gICAgb2xkVGV4dDogYW55O1xuICAgIHRpbWVvdXRTYXZpbmc6IGFueTtcbiAgICBjb25zdHJ1Y3RvcihlbGVtZW50UmVmOiBFbGVtZW50UmVmLCB6b25lOiBOZ1pvbmUpO1xuICAgIG5nT25Jbml0KCk6IHZvaWQ7XG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcbiAgICBpbml0KCk6IHZvaWQ7XG4gICAgaW5pdEV2ZW50cygpOiB2b2lkO1xuICAgIHVwZGF0ZVRleHQoKTogdm9pZDtcbiAgICBvcHRpb25zOiBhbnk7XG4gICAgc2V0T3B0aW9ucyhvcHRpb25zOiBhbnkpOiB2b2lkO1xuICAgIHJlYWRPbmx5OiBhbnk7XG4gICAgc2V0UmVhZE9ubHkocmVhZE9ubHk6IGFueSk6IHZvaWQ7XG4gICAgdGhlbWU6IGFueTtcbiAgICBzZXRUaGVtZSh0aGVtZTogYW55KTogdm9pZDtcbiAgICBtb2RlOiBhbnk7XG4gICAgc2V0TW9kZShtb2RlOiBhbnkpOiB2b2lkO1xuICAgIHZhbHVlOiBzdHJpbmc7XG4gICAgd3JpdGVWYWx1ZSh2YWx1ZTogYW55KTogdm9pZDtcbiAgICBwcml2YXRlIF9vbkNoYW5nZTtcbiAgICByZWdpc3Rlck9uQ2hhbmdlKGZuOiBhbnkpOiB2b2lkO1xuICAgIHByaXZhdGUgX29uVG91Y2hlZDtcbiAgICByZWdpc3Rlck9uVG91Y2hlZChmbjogYW55KTogdm9pZDtcbiAgICB0ZXh0OiBzdHJpbmc7XG4gICAgc2V0VGV4dCh0ZXh0OiBhbnkpOiB2b2lkO1xuICAgIGF1dG9VcGRhdGVDb250ZW50OiBhbnk7XG4gICAgc2V0QXV0b1VwZGF0ZUNvbnRlbnQoc3RhdHVzOiBhbnkpOiB2b2lkO1xuICAgIGR1cmF0aW9uQmVmb3JlQ2FsbGJhY2s6IG51bWJlcjtcbiAgICBzZXREdXJhdGlvbkJlZm9yZUNhbGxiYWNrKG51bTogbnVtYmVyKTogdm9pZDtcbiAgICBnZXRFZGl0b3IoKTogYW55O1xufVxuIl19
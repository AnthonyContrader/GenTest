import { NgZone, OnInit, OnDestroy, DoCheck, EventEmitter, ChangeDetectorRef } from '@angular/core';
import { PerfectScrollbarDirective } from './perfect-scrollbar.directive';
import { PerfectScrollbarConfigInterface } from './perfect-scrollbar.interfaces';
import * as ɵngcc0 from '@angular/core';
export declare class PerfectScrollbarComponent implements OnInit, OnDestroy, DoCheck {
    private zone;
    private cdRef;
    private platformId;
    states: any;
    indicatorX: boolean;
    indicatorY: boolean;
    interaction: boolean;
    private scrollPositionX;
    private scrollPositionY;
    private scrollDirectionX;
    private scrollDirectionY;
    private usePropagationX;
    private usePropagationY;
    private allowPropagationX;
    private allowPropagationY;
    private stateTimeout;
    private readonly ngDestroy;
    private readonly stateUpdate;
    disabled: boolean;
    usePSClass: boolean;
    autoPropagation: boolean;
    scrollIndicators: boolean;
    config?: PerfectScrollbarConfigInterface;
    psScrollY: EventEmitter<any>;
    psScrollX: EventEmitter<any>;
    psScrollUp: EventEmitter<any>;
    psScrollDown: EventEmitter<any>;
    psScrollLeft: EventEmitter<any>;
    psScrollRight: EventEmitter<any>;
    psYReachEnd: EventEmitter<any>;
    psYReachStart: EventEmitter<any>;
    psXReachEnd: EventEmitter<any>;
    psXReachStart: EventEmitter<any>;
    directiveRef?: PerfectScrollbarDirective;
    constructor(zone: NgZone, cdRef: ChangeDetectorRef, platformId: Object);
    ngOnInit(): void;
    ngOnDestroy(): void;
    ngDoCheck(): void;
    private checkPropagation;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PerfectScrollbarComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<PerfectScrollbarComponent, "perfect-scrollbar", ["ngxPerfectScrollbar"], {
    "disabled": "disabled";
    "usePSClass": "usePSClass";
    "autoPropagation": "autoPropagation";
    "scrollIndicators": "scrollIndicators";
    "config": "config";
}, {
    "psScrollY": "psScrollY";
    "psScrollX": "psScrollX";
    "psScrollUp": "psScrollUp";
    "psScrollDown": "psScrollDown";
    "psScrollLeft": "psScrollLeft";
    "psScrollRight": "psScrollRight";
    "psYReachEnd": "psYReachEnd";
    "psYReachStart": "psYReachStart";
    "psXReachEnd": "psXReachEnd";
    "psXReachStart": "psXReachStart";
}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGVyZmVjdC1zY3JvbGxiYXIuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbInBlcmZlY3Qtc2Nyb2xsYmFyLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nWm9uZSwgT25Jbml0LCBPbkRlc3Ryb3ksIERvQ2hlY2ssIEV2ZW50RW1pdHRlciwgQ2hhbmdlRGV0ZWN0b3JSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFBlcmZlY3RTY3JvbGxiYXJEaXJlY3RpdmUgfSBmcm9tICcuL3BlcmZlY3Qtc2Nyb2xsYmFyLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBQZXJmZWN0U2Nyb2xsYmFyQ29uZmlnSW50ZXJmYWNlIH0gZnJvbSAnLi9wZXJmZWN0LXNjcm9sbGJhci5pbnRlcmZhY2VzJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFBlcmZlY3RTY3JvbGxiYXJDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSwgRG9DaGVjayB7XG4gICAgcHJpdmF0ZSB6b25lO1xuICAgIHByaXZhdGUgY2RSZWY7XG4gICAgcHJpdmF0ZSBwbGF0Zm9ybUlkO1xuICAgIHN0YXRlczogYW55O1xuICAgIGluZGljYXRvclg6IGJvb2xlYW47XG4gICAgaW5kaWNhdG9yWTogYm9vbGVhbjtcbiAgICBpbnRlcmFjdGlvbjogYm9vbGVhbjtcbiAgICBwcml2YXRlIHNjcm9sbFBvc2l0aW9uWDtcbiAgICBwcml2YXRlIHNjcm9sbFBvc2l0aW9uWTtcbiAgICBwcml2YXRlIHNjcm9sbERpcmVjdGlvblg7XG4gICAgcHJpdmF0ZSBzY3JvbGxEaXJlY3Rpb25ZO1xuICAgIHByaXZhdGUgdXNlUHJvcGFnYXRpb25YO1xuICAgIHByaXZhdGUgdXNlUHJvcGFnYXRpb25ZO1xuICAgIHByaXZhdGUgYWxsb3dQcm9wYWdhdGlvblg7XG4gICAgcHJpdmF0ZSBhbGxvd1Byb3BhZ2F0aW9uWTtcbiAgICBwcml2YXRlIHN0YXRlVGltZW91dDtcbiAgICBwcml2YXRlIHJlYWRvbmx5IG5nRGVzdHJveTtcbiAgICBwcml2YXRlIHJlYWRvbmx5IHN0YXRlVXBkYXRlO1xuICAgIGRpc2FibGVkOiBib29sZWFuO1xuICAgIHVzZVBTQ2xhc3M6IGJvb2xlYW47XG4gICAgYXV0b1Byb3BhZ2F0aW9uOiBib29sZWFuO1xuICAgIHNjcm9sbEluZGljYXRvcnM6IGJvb2xlYW47XG4gICAgY29uZmlnPzogUGVyZmVjdFNjcm9sbGJhckNvbmZpZ0ludGVyZmFjZTtcbiAgICBwc1Njcm9sbFk6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIHBzU2Nyb2xsWDogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgcHNTY3JvbGxVcDogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgcHNTY3JvbGxEb3duOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBwc1Njcm9sbExlZnQ6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIHBzU2Nyb2xsUmlnaHQ6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIHBzWVJlYWNoRW5kOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBwc1lSZWFjaFN0YXJ0OiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBwc1hSZWFjaEVuZDogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgcHNYUmVhY2hTdGFydDogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgZGlyZWN0aXZlUmVmPzogUGVyZmVjdFNjcm9sbGJhckRpcmVjdGl2ZTtcbiAgICBjb25zdHJ1Y3Rvcih6b25lOiBOZ1pvbmUsIGNkUmVmOiBDaGFuZ2VEZXRlY3RvclJlZiwgcGxhdGZvcm1JZDogT2JqZWN0KTtcbiAgICBuZ09uSW5pdCgpOiB2b2lkO1xuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XG4gICAgbmdEb0NoZWNrKCk6IHZvaWQ7XG4gICAgcHJpdmF0ZSBjaGVja1Byb3BhZ2F0aW9uO1xufVxuIl19